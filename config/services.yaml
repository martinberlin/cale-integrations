# This file is the entry point to configure your own services.
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    version: 1.0.3
    locales: en|es|de
    cale_official_email: martin@cale.es
    screen_templates:
        '1 Column':  1-col.html.twig
        '2 Columns': 2-col.html.twig
        '2 Columns with header': 2-col-header.html.twig
        '3 Columns': 3-col.html.twig
        '3 Columns with header': 3-col-header.html.twig
    screen_templates_contents:
         1-col.html.twig:
             '1st Column': 'Column_1st'
         2-col.html.twig:
             '1st Column': 'Column_1st'
             '2nd Column': 'Column_2nd'
         3-col.html.twig:
             '1st Column': 'Column_1st'
             '2nd Column': 'Column_2nd'
             '3rd Column': 'Column_3rd'
         2-col-header.html.twig:
             'Header': 'Header'
             '1st Column': 'Column_1st'
             '2nd Column': 'Column_2nd'
         3-col-header.html.twig:
             'Header': 'Header'
             '1st Column': 'Column_1st'
             '2nd Column': 'Column_2nd'
             '3rd Column': 'Column_3rd'
    html_max_chars: 2000
    # Notice that ../public is hardcoded in BackendApiController::apiInternalHtml
    screen_images_directory: /screenimg
    # gallery_max_size is used as File maxSize constraint (needs 'k' appended later in FormType)
    gallery_max_size: 699
    gallery_max_size_total: 15000

    # Email config
    email_reset_password:   'dontreply@cale.es'
    email_reset_pass_title: 'CALE password recovery'
    # Datatables
    datatables:
        date_format: 'Y.m.d H:i'
    # Configuration of mysql API 1st level cache
    cache_config:
        enabled: 1
        hash_algo: sha3-512
        ttl_seconds: 600
        ttl_short: 10

    google_application_name: Cale Web client
    api_languages:
        en: English
        de: German
        es: Spanish
        ca: Catalan
        fr: French
        hr: Croatian
        cs: Czech
        da: Danish
        el: Greek
        ar: Arabic
        eo: Esperanto
        et: Estonian
        fi: Finnish
        he: Hebrew
        hi: Hindi
        hu: Hungarian
        id: Indonesian
        is: Icelandic
        it: Italian
        ja: Japanese
        ka: Georgian
        kn: Kannada
        ko: Korean
        lv: Latvian
        ml: Malayam
        mr: Marathi
        nb: Norwegian Bokm√•l
        nl: Dutch
        pa: Punjabi
        pl: Polish
        pt: Portuguese
        ro: Romanian
        ru: Russian
        sk: Slovak
        sl: Slovenian
        sr: Serbian
        sv: Swedish
        ta: Tamil
        te: Telugu
        tr: Turkish
        uk: Ukrainian
        ur: Urdu
        zh: simplified Chinese

services:
    # Default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # Let inject Profiler into a Controller
    Symfony\Component\HttpKernel\Profiler\Profiler: '@profiler'

    # Event listeners
    App\EventListener\TimezoneListener:
        tags:
            - { name: kernel.event_listener }

    # Event subscribers
    App\EventSubscriber\LocaleSubscriber:
        arguments: ['%kernel.default_locale%']

    App\EventSubscriber\AuthenticationSuccessSubscriber: ~
    # Arguments are auto injected, just as a reference:
    #    arguments:
    #        - '@security'

    # Makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/*'
        exclude:
            - '../src/{DependencyInjection,Entity,Migrations,Tests,Kernel.php}'
            - '../src/Service/'
            - '../src/EventListener/'

    # Controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller'
        tags: ['controller.service_arguments']

    # Add more service definitions when explicit configuration is needed
    App\Service\GoogleClientService:
        arguments:
            - \Google_Client

    # Simple cache layer
    App\Service\SimpleCacheService:
        arguments:
            - '%cache_config%'

    App\Twig\FileexistsExtension:
        tags:
            - { name: twig.extension }
