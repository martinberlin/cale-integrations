{% extends '/base.html.twig' %}
{% set carousel_high = 110 %}

{% block stylesheets %}
    <style>
        #myCarousel.carousel {
            height: {{ carousel_high }}px;
        }
        #myCarousel .item {
            height: {{ carousel_high }}px; width: 100%;
            background-color: #333;
        }
        body {
            background-color: #e0e0e0;
            color:black;
        }
    </style>
{% endblock stylesheets %}

{% block carousel %}
    {% include "/partials/carousel.html.twig" %}
{% endblock carousel %}

{% block body %}
    <div class="row">

        <div class="col-md-3 col-sm-6 col-xs-12">
    <img src="/assets/svg/logo/cale-idf.svg">
        </div>
        <div class="col-md-9 col-sm-6 col-xs-12" style="margin-top: 1.2em">
    <h3>Firmware für ESP-IDF Framework</h3>
    </div>
    </div>
    <div class="panel panel-default" style="margin-top: 1em">
                <div class="panel-heading">Easy Konfiguration:</div>
                <div class="panel-body">
    <ul>
        <li><a href="#a1">1. So kompilieren und flashen Sie auf Ihr Board</a></li>
        <li><a href="#a2">2. Auswahl des richtigen Classname für ihre epaper</a></li>
        <li><a href="{{ path('firmware-tft') }}">Firmware für TFT displays - cale_tft arduino-esp32</a></li>
    </ul>

    </div></div>

    <p>
        <a id="a1"></a><br><br><h4>1. So kompilieren und flashen Sie auf Ihr Board</h4>
    Clone die repository:<br>
    <a href="https://github.com/martinberlin/cale-idf">https://github.com/martinberlin/cale-idf</a>
<br><br>
    Stellen Sie sicher, dass Sie das Epaper gemäß den Anweisungen in den
    <a href="{{ path('firmware') }}#s_esp32">ESP32-Schaltplänen</a> anschließen.
    GPIOs können geändert werden, solange sie gültige Ausgangs (MOSI,CLK,CS,DC,RST) und Eingangs-PINS (BUSY) sind.

    ESP32 Firmware Konfigurieren:<br><b>idf.py menuconfig</b><br>

    <h4>Display configuration</h4>
    <img src="/img/www/firmware/idf/menuconfig-display.png"><br>

    <h4>CALE configuration</h4>
    Stellen Sie sicher, dass Sie die vollständige Bild-URL aus der Bildschirmkonfiguration und auch das Bearer-Token kopieren,
    wenn Ihr Bildschirm nicht öffentlich ist.<br>
    <img src="/img/www/firmware/idf/menuconfig-cale.png"><br>
        <br>
    Das sollte die vollständige Konfiguration sein. Wieder aufzunehmen: <br>

    <pre>
idf.py set-target esp32  (esp32s2 is also supported)
idf.py menuconfig
idf.py flash monitor
    </pre>

    Wenn alles korrekt funktioniert, sollte Ihr Epaper Display die dynamisch generierte CALE-Bitmap herunterladen und auf dem Display rendern. Einige Statistiken:<br>
    <pre>730 download of the image
256 _wakeUp settings+send Buffer
2004 update
____
2992 total time in millis</pre>
    </p>
    <a id="a2"></a><br><br><br><h4>2. Auswahl des richtigen Classname für ihre epaper</h4>
    Bitte prüfen in <a href="https://github.com/martinberlin/cale-idf/wiki" class="cale">Cale-idf</a> Wiki
    ob Ihr epaper Classname da ist.
    Nur epapers >= 400*300 sind zur Unterstützung geplant.
    <br><br><small>Font rendering Beispiel:</small><br>
    <img src="https://sync.luckycloud.de/thumbnail/61544feac3354a469448/1024/img/ubuntu-demo.jpeg">
{% endblock %}

{% block javascripts %}
    <script type="text/javascript" src="/js/engine/common.js"></script>
{% endblock %}