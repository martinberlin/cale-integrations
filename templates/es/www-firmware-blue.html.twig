{% extends '/base.html.twig' %}
{% set carousel_high = 110 %}

{% block stylesheets %}
    <style>
        #myCarousel.carousel {
            height: {{ carousel_high }}px;
        }
        #myCarousel .item {
            height: {{ carousel_high }}px; width: 100%;
            background-color: #333;
        }
        body {
            background-color: #e0e0e0;
            color:black;
        }
    </style>
    {# Datatables include let's make this one line #}
        <link href="/js/datatables/datatables.css" rel="stylesheet">
        <script src="/js/jquery/jquery-2.1.0.min.js"></script>
        <script type="text/javascript" src="/js/datatables/datatables.min.js"></script>
{% endblock stylesheets %}

{% block carousel %}
    {% include "/partials/carousel.html.twig" %}
{% endblock carousel %}

{% block body %}

    <h3>Configurando el Firmware usando Bluetooth</h3>

    <div class="row">
        <div class="col-md-6">
    <div class="panel panel-default" style="margin-top: 1em">
                <div class="panel-heading">Accesso rápido:</div>
                <div class="panel-body">
    <ul>
        <li><a href="#a1">Configurando el Fimware con Bluetooth</a></li>
        <li><a href="#a2">Referencia para el Config</a></li>
        <li><a href="#a3">Aplicación Android</a></li>
        <li><a href="{{ path('firmware') }}">Back to main Firmware section</a></li>
    </ul>

    </div></div>
            <a id="a1"></a><br>
            <p style="margin-top:4em">
                Estamos actualmente cambiando la forma de configurar el Firmware para que sea mas fácil para el usuario.
                El objetivo es que se pueda configurar el Firmware facilmente desde una aplicación Android.

                Seguiremos ofreciendo la posibilidad de configurarlo también directamente con un fichero Config.h en C.
                Por que creemos que es una opción valida para displays que están siempre conectados al mismo WiFi y elimina
                la necesidad de tener un movil con el sistema operativo Android. Pero creemos que para los usuarios que no
                tienen la opción, o no desean compilar el Firmware, tiene que ser posible recibir un producto terminado y
                configurarlo usando su movil o su tablet Android.
            </p>
            <br><br>
            <b>Basicamente la configuración Bluetooth se realiza en tres pasos</b>
            <ul>
                <li>1. <b>En CALE Admin sección "WiFi", agrega los puntos de acceso WiFi a los que el display puede conectarse para estar online</b></li>
                <li>2. <b>En la sección "Screen config", selecciona los WiFis que quieres usar, esto generara una configuración JSON. Seleccionala y copia el texto</b></li>
                <li>3. <b>En la aplicación Android de CALE, selecciona el Bluetooth que comienza por CALE_*. Haz click en "Send config". HECHO</b></li>
            </ul>
            Naturalmente antes del punto 3, el Firmare debería estar conectado, y esperando recibir la configuración por Bluetooth.
        </div>
        <div class="col-md-6">
            <img src="/assets/www/firmware/cale_app.jpg" style="border: 1px solid #333333" alt="CALE Android app" class="pull-right">
        </div>
    </div>


    <a id="a2"></a>

    <h4 style="margin-top:3em">Config reference</h4>
    <p>It's important to note that as you have to send this from an Android app, it will be the best just to
        login into CALE admin area on the mobile.
        Then go to Screen and on the list click on <b>Config</b>.
        The Blueooth tab is the default.
        The only pre-requsite is to select the right WiFi access points, first two will be preselected. </p>
    <img src="/assets/www/firmware/screen_config1.png" alt="CALE Bluetooth config">


    In this tab just click on the textarea to select all the text, copy it in the clipboard. Start the Display, in the app
    select the Bluetooth starting with CALE_* and paste the JSON text in the next step.
    That's it. The display should restart, connect to WiFi, and render your Screen.

{% endblock %}

{% block javascripts %}
    <script type="text/javascript" src="./js/engine/common.js"></script>
{% endblock %}