{% extends 'backend/backend-base.html.twig' %}
{% set linkPre = '' %}
{# Datatables include let's make this one line #}
{% block stylesheets %}
    <link href="/js/datatables/datatables.css" rel="stylesheet">
    <script src="/js/jquery/jquery-2.1.0.min.js"></script>
    <script src="/js/jquery/bootstrap-toogle.min.js"></script>
    <script type="text/javascript" src="/js/datatables/datatables.min.js"></script>
{% endblock %}

{% block body %}
    <div class="row">

{% if isMobile == false %}
        <div class="col-md-5 col-sm-5 col-xs-12">
            <small>Click here if you want to understand the sections of the admin for a short on-boarding tour</small>
            <div class="text-center" style="margin-bottom:1em">
                <button class="btn btn-default" onclick="introJs().start();">
                <span class="glyphicon glyphicon-question-sign"></span> Give me an Admin-tour</button>
            </div>

{% if shippings|length %}
    <div class="panel panel-default">
        <div class="panel-heading"><img style="float: right" src="/assets/svg/admin/shipping.svg">We sent a package to you</div>
        <div class="panel-body">
            <table style="border-spacing:4px;width: 100%">
                <thead>
                <tr>
                    <th>Sent</th>
                    <th>Tracking</th>
                    <th>Status</th>
                    <th>Description</th>
                    <th></th>
                </tr>
                </thead>
                <tbody>
            {% for s in shippings %}
                <tr>
                    <td>{{ s.created|date('M.d') }}</td>
                    <td>{% if s.sentBy == 'hermes' %}
                            {% set linkPre = 'https://www.myhermes.de/empfangen/sendungsverfolgung/sendungsinformation/#' %}
                        {% endif %}
                        <a href="{{ linkPre ~ s.tracking }}">{{ s.tracking }}</a></td>
                    <td>{{ s.status }}</td>
                    <td>{{ s.description }}</td>
                    <td>
                        <a class="btn btn-default" href="{{ path('b_home') }}?received={{ s.tracking }}">
                            <span class="glyphicon glyphicon-home"></span> Confirm goods received</a>
                    </td>
                </tr>
            {% endfor %}
                </tbody>
                </table>
        </div>
    </div>


{% endif %}

Recommended steps to start:
            <ol>
                <li>
                    <h4><a href="{{ path('b_api_configure') }}">Configure your APIs</a></h4>
                </li>

                <li>
                    <h4><a href="{{ path('b_screen_edit') }}">Setup your Screen and select a template</a></h4>
                </li>
                <li>
                    <h4><a  href="{{ path('b_wifi_edit') }}">Add your WiFi Access points</a></h4>Only if you will use a WiFi display otherwise skip this step.
                </li>
                <li>
                    <h4>Screen <span class="glyphicon glyphicon-arrow-right"></span> Content partials add your APIs to the template columns</h4>
                    We recommend to start adding the HTML Api since has no requirements.
                </li>
                <li>
                    <h4>Preview your Screens in "Render Screen"</h4>
                    Play around with the output options to get familiar with them
                </li>
            </ol>

            <br><br>
Admin version: v{{ version }}
        </div>
{% endif %}

        <div class="col-md-7 col-sm-7 col-xs-12">
            <h4>Screen log</h4>
        {% if (hasScreen) %}
        <div class="row">
            <div class="col-md-4 col-sm-6 col-xs-12">
            <input id="autorefresh" type="checkbox" data-toggle="toggle">
                <span class="glyphicon glyphicon-refresh"></span>
            <label id="autorefresh-label" style="font-size: 14px">Auto-refresh</label>
            </div>
                <div id="purge" class="col-md-2 col-sm-2 col-xs-12" style="margin-top: 0.3em;visibility: hidden">
                    <a href="javascript:logPurge()"><span class="glyphicon glyphicon-remove" style="color:darkred"></span></a>
                        <a href="javascript:logPurge()" data-toggle="tooltip" title="{{ 'logs_purge_tooltip'|trans }}"><span style="font-size: 14px">Purge logs</span></a>
                </div>
                <div class="col-md-6 col-sm-6 col-xs-12" style="margin-top: -0.3em">
                    <div class="small alert alert-success" style="visibility: hidden" id="response_msg"></div>
                </div>
        </div>

        <table id="screen_log" class="table table-striped table-condensed dataTable" style="border:1px white solid !important">
            <thead><tr></tr></thead>
        </table>
            {% else %}
            {{ 'no_screen_logs_yet'|trans }}
        {% endif %}
        </div>

    </div>
{% endblock %}
{% block javascripts %}
    <script>
        screenLogTable = 'screen_log';
        let isMobile = ('{{ isMobile }}'==='1')?true:false;
        let refreshes = 0;
        let autorefresh = 0;
        let t;
        let auto = document.getElementById('autorefresh');
        let autoLabel = document.getElementById('autorefresh-label');
        let response_msg = document.getElementById('response_msg');
        let interval;
        let tableJson = '{{ path('b_json_datatables', {'type': 'screen_log'}) }}';
        if (isMobile) {
            tableJson = '{{ path('b_json_datatables', {'type': 'screen_log_mobile'}) }}';
        }
    if (isElement(document.getElementById(screenLogTable))) {
        tableScreenLog()
    }

    {# Events . autorefresh does not work without jquery #}
    autoLabel.onclick = function() {
        $('#autorefresh').bootstrapToggle('toggle')
    };
    auto.onchange = function() {
        tableScreenLog()
    };

    function tableScreenLog() {
        var data, tableName = '#screen_log', columns, str,
            jqxhr = $.ajax(tableJson)
                .done(function () {
                    data = JSON.parse(jqxhr.responseText);
                    if (!refreshes) {
                        $.each(data.columns, function (k, colObj) {
                            str = '<th>' + colObj.n + '</th>';
                            $(str).appendTo(tableName + '>thead>tr');
                        });

                    }

                    data.columns[3].render = function (data, type, row) {
                        return '<small>' +formatBytes(data)+ '</small>';
                    };

                    if (isMobile) {
                        data.columns[0].render = function (data) {
                            return '<small>' + data + '</small>';
                        };
                        data.columns[1].render = function (data) {
                            return '<small>' + data + '</small>';
                        };
                        data.columns[2].render = function (data) {
                            return '<small>' + data + '</small>';
                        };
                        data.columns[4].render = function (data) {
                            return '<small>' + data + '</small>';
                        };
                        refreshLogTable(tableName, data, [[1, 'desc']]);
                    } else {
                        refreshLogTable(tableName, data, [[1, 'desc'], [5, 'desc']]);
                    }

                })
                .fail(function (jqXHR, exception) {
                    var msg = '';
                    if (jqXHR.status === 0) {
                        msg = 'Not connect.\n Verify Network.';
                    } else if (exception === 'parsererror') {
                        msg = 'Requested JSON parse failed.';
                    } else {
                        msg = 'Uncaught Error.\n' + jqXHR.responseText;
                    }
                    console.log(msg);
                });

        clearInterval(interval);
        if (auto.checked) {
            interval = setInterval( function () {
                tableScreenLog()
            }, 15000 );
        }
    }

        function logPurge() {
            var xhr = $.ajax('{{ path('b_json_datatables', {'type': 'screen_log_purge','amount':100}) }}')
                    .done(function () {
                            data = JSON.parse(xhr.responseText);
                        response_msg.style.visibility = 'visible';
                        response_msg.innerText = data.status;
                        setTimeout(function(){ response_msg.style.visibility = 'hidden' }, 3000);
                        }
                    );
            setTimeout(tableScreenLog(),1000);
        }
    </script>

{% endblock %}
