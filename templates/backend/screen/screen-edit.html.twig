{% extends 'backend/backend-base.html.twig' %}
{% form_theme form.userWifi 'backend/themes/checkbox-custom.html.twig' %}
{% set extra_visibility = 'visible' %}
{% set extra_display = 'block' %}
{% if is_new %}
    {% set extra_visibility = 'hidden' %}
    {% set extra_display = 'none' %}
{% endif %}

{% block body %}
    {{ form_start(form) }}
    {{ form_errors(form) }}
        <div class="row">
            <div class="col-md-8 col-sm-8 col-xs-12">
            {{ 'screen_edit_line1'|trans }}.
            {{ 'screen_edit_line2'|trans }}
            </div>

            <div class="col-md-4 col-sm-4 col-xs-12" {% if is_new %}style="visibility:hidden"{% endif %}>
                {{ form_widget(form.submit_top) }}
            </div>

        </div>

    <div class="row">
        <div class="col-md-8 col-sm-12 col-xs-12" style="margin-top:0.7em">
            {{ form_row(form.name) }}

            {% if isMobile %}
                <label for="config_json_mobile">Copy JSON configuration:</label>
                <textarea id="config_json_mobile" rows="4" onclick="this.setSelectionRange(0, this.value.length)" class="form-control"></textarea>
            {% endif %}

            {{ form_row(form.templateTwig) }}

            {{ form_row(form.display) }}

            <div class="panel panel-default" style="margin-top: 1em">
                <div class="panel-heading">Privacy settings</div>
                <div class="panel-body">
                    {{ form_row(form.public) }}

                    {{ form_row(form.outBearer) }}
                </div>
            </div>

            <div class="panel panel-default" style="display:{{ extra_display }}">
                <div class="panel-heading"><b>Firmware - {{ 'screen_token_firmware_step1'|trans }}</b></div>
                <div class="panel-body">

                    <ul class="nav nav-tabs" role="tablist" id="cale-tab">
                        <li role="presentation" class="active">
                            <a href="#bt" id="ble-tab" role="tab" data-toggle="tab" aria-controls="bt">Buetooth JSON</a>
                        </li>
                        <li role="presentation">
                            <a href="#ct" id="c-tab" role="tab" data-toggle="tab" aria-controls="ct">C Config</a>
                        </li>
                    </ul>

                    <div class="tab-content">
                        <div role="tabpanel" class="tab-pane active" id="bt" aria-labelledby="bt-tab">
                            {{ 'screen_token_firmware_blue'|trans }}

                            Please note that this configuration needs the Bluetooth edition of the Firmware (branch: cale_ble)

             <textarea id="config_json" rows="4" onclick="this.setSelectionRange(0, this.value.length)" class="form-control"></textarea>
                        </div>
                        <div role="tabpanel" class="tab-pane" id="ct" aria-labelledby="ct-tab">
                            {{ 'screen_token_firmware_c'|trans }}
                            <a href="{{ path('firmware', {'_locale': 'en'}) }}" target="_blank">CALE Firmware</a>
 <textarea  id="config_c" rows="4" onclick="this.setSelectionRange(0, this.value.length)" class="form-control"></textarea>
                            <div id="config_c_alert" class="alert"></div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="col-md-4 col-sm-12 col-xs-12 text-right" style="margin-top: -1.4em">
            {% if uuid is not null %}
            <a href="{{ path('b_screen_partials', {'uuid':uuid}) }}">{% endif %}

                <img id="template" src="">{% if uuid is not null %}</a>{% endif %}<br>

            {% if uuid is not null %}
                <a href="{{ path('b_screen_partials', {'uuid':uuid}) }}"
                   style="margin-top:-3em"
                   class="btn btn-default form-control">
                    <span class="glyphicon glyphicon-paperclip"></span> {{ 'screen_edit_partials'|trans }}</a>
            {% endif %}
            <div class="panel panel-default" style="margin-top: 1em;visibility:{{ extra_visibility }}">
                <div class="panel-heading">Select WiFi access points (max. 2)</div>
                <div class="panel-body text-left" style="margin-top:-0.7em">
                    {{ form_row(form.userWifi) }}
                </div>
            </div>
            <div class="panel panel-default" style="margin-top: 1em">
                <div class="panel-heading">Service times</div>
                <div class="panel-body text-left" style="margin-top:-0.7em">
                    <small>Your Screen will query CALE API on every restart and refresh only on selected days and hours range (Battery lifespan)</small>
                    <div class="row">
                        <div class="col-md-6 col-sm-6 col-xs-12">
                            {{ form_row(form.stDayFrom) }}
                        </div>
                        <div class="col-md-6 col-sm-6 col-xs-12">
                            {{ form_row(form.stDayTo) }}
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-6 col-sm-6 col-xs-12">
                            {{ form_row(form.stHourFrom) }}
                        </div>
                        <div class="col-md-6 col-sm-6 col-xs-12">
                            {{ form_row(form.stHourTo) }}
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-xs-12" style="margin-top:0.7em"><small>Example:
                            Day from Monday to Friday and hour from 8 to 17:59.</small>
                        </div>
                    </div>
                </div>
            </div>
            <a href="javascript:showAccess()" id="show_access_trigger">Show how to access outside the Firmware</a>
            <div id="show_access" class="panel panel-default" style="margin-top:1em;visibility: hidden">
                <div class="panel-heading">{{ 'screen_token_access_title'|trans }}</div>
                <div class="panel-body text-left">
                    <p style="margin-left: 0.4em">
                        {{ 'screen_token_request'|trans }}:</p>
                    <pre class="small">
Authorization: Bearer {{ form.vars.value.outBearer }}
</pre>Firmware does this automatically
                </div>
            </div>

        </div>
    </div>
    <div class="row">
        <div class="col-md-8 col-sm-12 col-xs-12">
            {{ form_widget(form.submit) }}
        </div>
    </div>
    {{ form_end(form) }}
{% endblock %}

{% block javascripts %}
    <script>
        let screen_url = "{{ bmp_url }}";
        let bearer = "{{ form.vars.value.outBearer }}";
        let template_twig = document.getElementById('templateTwig');
        let template_img = document.getElementById('template');
        let bearerInput = document.getElementById('outBearer');
        let config_json = document.getElementById('config_json');
        let config_json_mobile = document.getElementById('config_json_mobile');

        let is_mobile = !(config_json_mobile==null);
        let config_c = document.getElementById('config_c');
        let user_wifi = document.getElementById('userWifi');

        bearerInput.onclick = function () {
            bearerInput.setSelectionRange(0, bearerInput.value.length);
        };
        setTemplateImage();

        template_twig.onchange = function () {
            setTemplateImage();
        };

    {% if is_new == false %}
        wifis = user_wifi.getElementsByTagName('input');
        for (index = 0; index < 2; ++index) {
            if (typeof wifis[index] === 'object') {
              wifis[index].checked = true;
            }
        }
        jsonBlue(user_wifi);
    {% endif %}

        function setTemplateImage() {
            if (template_twig.value !== '') {
                let img_src = template_twig.value.replace('html.twig', 'svg');
                template_img.src = '/img/display-templates/' + img_src;
            }
        }
        function showAccess() {
            document.getElementById('show_access_trigger').style.display = "none";
            document.getElementById('show_access').style.visibility = "visible";
        }
        // on wifi_select
        function jsonBlue(el) {
            let wifis = el.getElementsByTagName('input');
            let wifi_index = 0;
            let config = new Object();
            let wifi_ssid;
            let wifi_pass;
            for (index = 0; index < wifis.length; ++index) {
                if (wifis[index].checked) {
                    wifi_index++;
                    let label = wifis[index].labels[0].innerText;
                    let label_split = label.split("__");
                    wifi_ssid = label_split[0];
                    wifi_pass = wifis[index].value;
                    let wifi_ssid_prop = "wifi_ssid"+ wifi_index.toString();
                    let wifi_pass_prop = "wifi_pass"+ wifi_index.toString();
                    config[wifi_ssid_prop] = wifi_ssid;
                    config[wifi_pass_prop] = wifi_pass;
                    if (wifi_index===2) break;
                }
            }
            config['screen_url'] = screen_url;
            config['bearer'] = bearer;
            var json = JSON.stringify(config);
            config_json.value = json;
            if (is_mobile) {
              config_json_mobile.value = json;
            }
            // Update also C version dynamic
            let c_config = '#define WIFI_SSID "'+wifi_ssid+'";'+ "\n";
            c_config += '#define WIFI_PASS "'+wifi_pass+'";'   + "\n";
            c_config += 'char screenUrl[] = "'+screen_url+'";' + "\n";
            c_config += 'String bearer = "'+bearer+'";';
            config_c.value = c_config;
            if (wifi_index>1) {
                config_c_alert.innerHTML = "Please note that the C version will take only last selected WiFi AP";
                config_c_alert.classList.add('alert-danger');
            } else {
                config_c_alert.innerHTML = "";
                config_c_alert.classList.remove('alert-danger');
            }
        }
    </script>
{% endblock javascripts %}