{% extends 'backend/backend-base.html.twig' %}
{% set defaultFColor = '#000000' %}
{% set defaultBColor = '#FFFFFF' %}
{% block stylesheets %}
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/@simonwep/pickr/dist/themes/nano.min.css"/>
{% endblock %}

{% macro rowPrototype(form) %}
    <div class="item row" style="margin:0.4em;padding:0.4em;border: 1px solid #2d545e">
       <div class="col-md-12">
           <div class="row">
               <div class="col-md-4 col-sm-6">
                   {{ form_row(form.partials.vars.prototype.integrationApi) }}
                   <div class="row">
                       <div class="col-md-2">
                           {{ form_label(form.partials.vars.prototype.maxResults) }}
                       </div>
                       <div class="col-md-2">
                           {{ form_widget(form.partials.vars.prototype.maxResults) }}
                       </div>
                       <div class="col-md-2">
                           {{ form_label(form.partials.vars.prototype.sortPos) }}
                       </div>
                       <div class="col-md-2">
                           {{ form_widget(form.partials.vars.prototype.sortPos) }}
                       </div>
                   </div>
               </div>
               <div class="col-md-2">
                   {{ form_row(form.partials.vars.prototype.placeholder) }}
                   {{ form_widget(form.partials.vars.prototype.invertedColor) }}
                   {{ form_label(form.partials.vars.prototype.invertedColor) }}
               </div>
               <div class="col-md-2">
                   {{ form_row(form.partials.vars.prototype.foregroundColor, {'attr': {'value': defaultFColor}}) }}
               </div>
               <div class="col-md-2">
                   {{ form_row(form.partials.vars.prototype.backgroundColor, {'attr': {'value': defaultBColor}}) }}
               </div>

               <div class="col-md-2">
                   <button type="button" style="margin-top: 2.2em"
                           class="delete_item btn btn-danger btn-sm">{{'Delete'|trans}}</button>
               </div>
           </div>
       </div>
   </div>
{% endmacro %}


{% block body %}
<div class="row">
    <div class="col-md-8 col-sm-6">
<p>
    <b>{{ 'screen_partials_edit_line1'|trans }}</b><br>
    {{ 'screen_partials_edit_line2'|trans }}.<br>
    {{ 'screen_partials_edit_line3'|trans }}.<br>

    {% if form.partials|length == 0 %}
        <br>Start adding your first content partial for this Screen with the <span class="glyphicon glyphicon-plus"></span> button below.
    {% endif %}
</p>
    </div>
    <div class="col-md-4 col-sm-6">
        <div class="row">
        <div class="col-md-6 col-sm-6">
            <b>Template:</b> {{ template_twig }}
            {% if display is not null %}
                {{ display.width }}x{{ display.height }}<br>
                <b>Class:</b> {{ display.className }}
            {% endif %}

            <br><a href="{{ path('b_screen_edit', {'uuid':uuid}) }}">{{ 'screen_edit_config'|trans }}</a>
        </div>
        <div class="col-md-6 col-sm-6">
            <img id="template" width="100" style="margin-top: -1em"
                 src="/img/display-templates/{{ template_twig }}.svg">
         </div>
         </div>
    </div>
</div>
{{ form_start(form) }}
{{ form_errors(form) }}

    <div class="collection_container">
        {#{{ form_row(form.partials) }}#}
        <div class="row">
            <div class="col-md-4 col-sm-6">
              <button type="button" class="add_item btn btn-default">
                  <span class="glyphicon glyphicon-plus"></span> {{ 'screen_add_partial'|trans }}</button>
             </div>
            <div class="col-md-4 col-sm-6">
            {{ form_widget(form.submit) }}
            </div>
            <div class="col-md-4 col-sm-6">
                {% if form.partials|length %}
                <button type="button" class="btn btn-success"
                onclick="window.location='{{ path('b_screen_render', {'uuid':uuid}) }}'">
                    {{'screen_render'|trans}}</button>
                {% endif %}
            </div>
        </div>
<br>
        {% if form.partials|length %}
        <label>{{'screen_partials'|trans}}</label>
        {% endif %}
        {# {{ form_widget(form.partials.vars.prototype)|e('html_attr') }} #}
        <div class="collection_holder row"
             data-prototype="{{ _self.rowPrototype(form)|e }}">


            {# Iterate over each existing partials #}
            {% for partial in form.partials %}
                <div class="item row" style="margin:0.4em;padding:0.4em;border: 1px solid #2d545e">
                    <div class="col-md-12">
                        <div class="row">
                            <div class="col-md-4 col-sm-6">
                                {{ form_row(partial.integrationApi) }}
                                <div class="row">
                                    {{ form_errors(partial.sortPos) }}
                                    {{ form_errors(partial.maxResults) }}
                                <div class="col-md-2">
                                    {{ form_label(partial.maxResults) }}
                                </div>
                                <div class="col-md-2">
                                    {{ form_widget(partial.maxResults) }}
                                </div>
                                <div class="col-md-2">
                                    {{ form_label(partial.sortPos) }}
                                </div>
                                <div class="col-md-2">
                                    {{ form_widget(partial.sortPos) }}
                                </div>
                                </div>
                            </div>
                            <div class="col-md-2">
                                {{ form_row(partial.placeholder) }}
                                {{ form_widget(partial.invertedColor) }}
                                {{ form_label(partial.invertedColor) }}
                            </div>
                            <div class="col-md-2">
                                {{ form_row(partial.backgroundColor) }}
                            </div>
                            <div class="col-md-2">
                                {{ form_row(partial.foregroundColor) }}
                            </div>
                            <div class="col-md-2">
                                <button type="button" style="margin-top: 2.2em"
                                        class="delete_item btn btn-danger btn-sm">{{'Delete'|trans}}</button><br>
                                <img src="" id="t_{{ loop.index0 }}">
                            </div>
                        </div>

                    </div>
                </div>
            {% endfor %}


        </div>
    </div>

{{ form_end(form) }}


{% endblock %}


{% block javascripts %}
{# TODO: Get rid of jquery since we are only using it here for handling the frontend part of Symfony collections #}
<script src="https://code.jquery.com/jquery-2.1.0.min.js"></script>
<script src="/js/engine/collection.js"></script>
<script src="https://cdn.jsdelivr.net/npm/@simonwep/pickr/dist/pickr.min.js"></script>

<script>
    document.addEventListener("DOMContentLoaded", function() {
        drawPickers()
    });

        function drawPickers() {
            //console.log("drawPickers()");

            let colorSwitch = true;
        document.querySelectorAll('.pickr').forEach(function (picker) {

            let defaultColor = (colorSwitch) ? '{{ defaultBColor }}' : '{{ defaultFColor }}';
            colorSwitch = !colorSwitch;

            //console.log(defaultColor)
            let pickr = Pickr.create({
                el: picker,
                theme: 'nano',
                useAsButton: true,
                default: '{{ defaultBColor }}',
                swatches: [
                    'rgb(0, 0, 0)',
                    'rgb(30, 30, 30)',
                    'rgb(50, 50, 50)',
                    'rgb(244, 167, 0)',
                    'rgb(244, 67, 54)',
                    'rgb(233, 30, 99)',
                    'rgb(156, 39, 176)',
                    'rgb(255, 255, 255)',
                    'rgb(63, 81, 181)',
                    'rgb(3, 169, 244)',
                    'rgb(0, 150, 136)',
                    'rgb(76, 175, 80)',
                    'rgb(205, 220, 57)',
                    'rgb(255, 193, 7)'
                ],
                defaultRepresentation: 'HEX',
                components: {
                    // Main components
                    preview: true,
                    opacity: false,
                    hue: false,
                    interaction: {
                        hex: true,
                        rgba: false,
                        hsva: false,
                        input: true,
                        save: false
                    }
                }
            }).on('init', pickr => {
                let el = pickr._root.button;
                pickr.setColor(el.value);
            }).on('change', color => {
                let el = pickr._root.button;
                el.value = color.toHEXA().toString();
                el.style.backgroundColor = color.toHEXA();
            });
        });
    }
</script>
{% endblock javascripts %}