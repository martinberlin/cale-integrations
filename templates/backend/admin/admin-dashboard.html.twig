{% extends 'backend/backend-base.html.twig' %}

{% block stylesheets %}
    <link href="/js/datatables/datatables.min.css" rel="stylesheet">
    <script src="/js/jquery/jquery-2.1.0.min.js"></script>
    <script type="text/javascript" src="/js/datatables/datatables.min.js"></script>
{% endblock %}

{% block body %}
    <div class="row">
        <div class="col-md-5 col-sm-5 col-xs-12" style="margin-top:0.3em">
            <table id="users" class="table table-striped table-condensed dataTable"
                   style="border:1px white solid;">
                <thead>
                </tr>
                <th>Email</th>
                <th>AP</th>
                <th>Screens</th>
                <th>Last login</th>
                <th>DnD</th>
                </tr>
                </thead>
                <tbody>
                {% for user in users %}
                    <tr style="border:1px #1b6d85 dashed">
                        <td><small>{{ user.email }}</small></td>
                        <td>{{ user.userApis|length }}</td>
                        <td valign="top">{% for s in user.screens %}

                                {% if loop.index < 3 %}
                                <div class="row" style="height: 20px">
                                    <div class="col-md-12 col-sm-12 col-xs-12">
                                        <small><a href="{{ path('public_screen_render', {'username':user.name,'uuid':s.id}) }}"
                                                  target="_blank">
                                                <span class="glyphicon glyphicon-picture"></span> {{ s.name }}
                                            </a></small>
                                    </div>
                                </div>
                                {% endif %}

                            {% endfor %}
                        </td>
                        <td><small>{% if user.lastLogin is not null %}{{ user.lastLogin|date("Y.m.d H:i") }}{% endif %}</small></td>
                        <td><small>{% if user.doNotDisturb %}No emails{% endif %}</small></td>
                    </tr>
                {% endfor %}
                </tbody>
            </table>
        </div>
        <div class="col-md-7 col-sm-7 col-xs-12" style="margin-top: 0.1em">
            <h4 class="pull-left" style="margin-top:0.12em"><a href="javascript:tableScreenLog()"><span class="glyphicon glyphicon-refresh"></span> Refresh table</a> &nbsp;&nbsp;</h4>
            <table id="screen_log" class="table table-striped table-condensed DataTable" style="border:1px white solid !important">
                <thead>
                <tr></tr>
                </thead>
            </table>
        </div>
    </div>
{% endblock %}

{% block javascripts %}
    <script>
        $('#users').dataTable({
            "order": [[3, 'desc']],
            "dom": "itipf"
        });
        // Let's draw table columns only on initialization
        let refreshes = 0;
        let t;
        document.addEventListener("DOMContentLoaded", function (event) {
            tableScreenLog();
        });

        function tableScreenLog() {
            var data, tableName = '#screen_log', columns, str,
                jqxhr = $.ajax('{{ path('b_json_datatables', {'type': 'screen_log_admin'}) }}')
                    .done(function () {
                        data = JSON.parse(jqxhr.responseText);
                        if (!refreshes) {
                            $.each(data.columns, function (k, colObj) {
                                str = '<th>' + colObj.n + '</th>';
                                $(str).appendTo(tableName + '>thead>tr');
                            });

                        }
                        data.columns[0].render = function (data) {
                            return '<small>' + data + '</small>';
                        };
                        data.columns[4].render = function (data, type, row) {
                            return formatBytes(data);
                        };

                        refreshTable(tableName, data, [[2, 'desc'], [6, 'desc']]);
                    })
                    .fail(function (jqXHR, exception) {
                        var msg = '';
                        if (jqXHR.status === 0) {
                            msg = 'Not connect.\n Verify Network.';
                        } else if (exception === 'parsererror') {
                            msg = 'Requested JSON parse failed.';
                        } else {
                            msg = 'Uncaught Error.\n' + jqXHR.responseText;
                        }
                        console.log(msg);
                    });
        }
    </script>
{% endblock %}

