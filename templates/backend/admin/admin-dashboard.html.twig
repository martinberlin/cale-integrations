{% extends 'backend/backend-base.html.twig' %}

{% block stylesheets %}
  <link href="/js/datatables/datatables.min.css" rel="stylesheet">
  <script src="/js/jquery/jquery-2.1.0.min.js"></script>
  <script type="text/javascript" src="/js/datatables/datatables.min.js"></script>
{% endblock %}

{% block body %}
<div class="row">
  <div class="col-md-5 col-sm-5 col-xs-12">
  <table class="dataTable" style="border-spacing:4px;width: 100%">
    <thead>
    </tr>
      <th>Email</th>
      <th>AP</th>
      <th>Screens</th>
      <th>Last login</th>
    </tr>
    </thead>
    <tbody>
    {% for user in users %}
      <tr style="border:1px #1b6d85 dashed">
        <td><small>{{ user.id~' '~user.email }}</small></td>
        <td>{{ user.userApis|length }}</td>
        <td valign="top">{% for s in user.screens %}
            <div class="row" style="height: 20px"><small><a href="{{ path('public_screen_render', {'username':user.name,'uuid':s.id}) }}" target="_blank">
            <span class="glyphicon glyphicon-picture"></span> {{ s.name }}</a></small>
            </div>
          {% endfor %}
        </td>
        <td><small>{{ user.lastLogin|date("d.m.Y H") }}</small></td>
      </tr>
    {% endfor %}
    </tbody>
  </table>
  </div>
  <div class="col-md-7 col-sm-7 col-xs-12">
    <table id="screen_log" class="table table-striped table-condensed dataTable">
      <thead><tr></tr></thead>
    </table>
  </div>
</div>
{% endblock %}

{% block javascripts %}
  <script>
    var data,tableName= '#screen_log',columns,str,
            jqxhr = $.ajax('{{ path('b_json_datatables', {'type': 'screen_log_admin'}) }}')
                    .done(function () {
                      data = JSON.parse(jqxhr.responseText);
                      $.each(data.columns, function (k, colObj) {
                        str = '<th>' + colObj.n + '</th>';
                        $(str).appendTo(tableName+'>thead>tr');
                      });
                      data.columns[0].render = function (data) {
                       return '<small>' + data + '</small>';
                       };
                        data.columns[4].render = function (data, type, row) {
                            return formatBytes(data);
                        };
                      $(tableName).dataTable({
                        "data": data.data,
                        "columns": data.columns
                      });
                    })
                    .fail(function (jqXHR, exception) {
                      var msg = '';
                      if (jqXHR.status === 0) {
                        msg = 'Not connect.\n Verify Network.';
                      } else if (exception === 'parsererror') {
                        msg = 'Requested JSON parse failed.';
                      } else {
                        msg = 'Uncaught Error.\n' + jqXHR.responseText;
                      }
                      console.log(msg);
                    });

  </script>
{% endblock %}

