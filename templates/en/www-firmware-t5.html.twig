{% extends '/base.html.twig' %}
{% set carousel_high = 110 %}

{% block stylesheets %}
    <style>
        #myCarousel.carousel {
            height: {{ carousel_high }}px;
        }
        #myCarousel .item {
            height: {{ carousel_high }}px; width: 100%;
            background-color: #333;
        }
        body {
            background-color: #e0e0e0;
            color:black;
        }
    </style>
{% endblock stylesheets %}

{% block carousel %}
    {% include "/partials/carousel.html.twig" %}
{% endblock carousel %}

{% block body %}

    <h3>Firmware for Lilygo T5 ESP32 boards</h3>

    <div class="panel panel-default" style="margin-top: 1em">
                <div class="panel-heading">Quick access:</div>
                <div class="panel-body">
    <ul>
        <li><a href="#a1">Quick start with the Lilygo T5</a></li>
        <li><a href="#a2">3Dprint a case</a></li>
    </ul>

    </div></div>

    <p>
    <b>We believe that embedded software has to be solid, simple and secure.</b><br>

        Lilygo is a <a href="http://www.lilygo.cn/prod_view.aspx?TypeId=50031&Id=1088&FId=t3:50031:3">chinese firma</a>
        that offers boards that come with an ESP32 and a SPI interface already wired in the PCB. So this boards
        should offer a quick start to try CALE since you don't need to soldier or assemble anything.<br>
    The steps will be reduced to two:
    <ul>
    <li><b>Adquire one of this epaper displays</b></li>
    <li><b>Download and compile the Firmware</b></li>
    </ul>


    <a id="a1"></a><br><br>
<br>The open source Firmware is here:<br>

    <h4><a href="https://github.com/martinberlin/eink-calendar/tree/cale_t5">https://github.com/martinberlin/eink-calendar/tree/cale_t5</a></h4>
    </p>

    <h4>How to compile and upload to your board</h4>

   <p>We assume that you are familiar with the <a href="https://fasani.de/2018/11/24/platformio-an-alternative-to-arduino-ide-and-a-complete-ecosystem-for-iot/">installation of Platformio</a> that is a great IDE to upload firmware to your boards and also to
    keep your dependencies contained in your project.

    The configuration is not complicated. After downloading just rename:<br>
    lib/Config/Config.h.dist to <br>
    Config.h<br><br>

    and fill it with your WiFi name and password.<br>
   </p>

    The most important part of the configuration is to copy the image URL from CALE "Render Screen" section into the configuration.
    Just click on the <b>Bitmap URL for the ESP32</b> to select all and copy it into the screenUrl and do the same with the <b>Bearer
    token</b> if you are using a private Screen:<br>

<pre>
    char screenUrl[] = "http://img.cale.es/bmp/USERNAME/SCREEN_ID";

    // Security setting, leave empty *only* if your screen is public (Not recommended)
    String bearer = "";
</pre>

    The Eink is already wired to the SPI interface, so please check their documentation in the
    <a href="https://github.com/lewisxhe/TTGO-EPaper-Series" target="_blank"
       data-toggle="tooltip" title="External link -> Github.com">TTGO E-paper repository</a>, to see
    what version of board you have. We tested this with a T5 2.4 and a Eink of 2.13 inches (250x122)

    <pre>
// 2.13 T5 v2.4
int8_t EINK_CS = 5;
int8_t EINK_RST  = 16;
int8_t EINK_DC   = 17;
int8_t EINK_BUSY = 4;
    </pre>

    <a id="a2"></a><br><br>
    <h3>3D print a case</h3>

    Doing a search for <a href="https://www.thingiverse.com/search?q=TTGO+T5" target="_blank">"ttgo T5" in Thingiverse</a>
    returns some cases for different models. We designed one in CALE for the 2.13 inches (250x122) display:
    <a href="https://www.thingiverse.com/thing:4209788" data-toggle="tooltip" title="External link -> Thingiverse"
    target="_blank"><img src="/img/www/ttgo-t5-2-13.jpg"><br>
    Ready for any 3D-Printer</a>

{% endblock %}

{% block javascripts %}
    <script type="text/javascript" src="./js/engine/common.js"></script>
{% endblock %}